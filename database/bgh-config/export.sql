--------------------------------------------------------
--  File created - Thursday-January-30-2020   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for DB Link DBXBILL
--------------------------------------------------------

  CREATE DATABASE LINK "DBXBILL"
   CONNECT TO "SYSADM" IDENTIFIED BY VALUES ':1'
   USING 'BB01FEED';
--------------------------------------------------------
--  DDL for DB Link DBXBSCS
--------------------------------------------------------

  CREATE DATABASE LINK "DBXBSCS"
   CONNECT TO "SYSADM" IDENTIFIED BY VALUES ':1'
   USING 'BB01FEED';
--------------------------------------------------------
--  DDL for DB Link DBXHOME
--------------------------------------------------------

  CREATE DATABASE LINK "DBXHOME"
   CONNECT TO "SYSADM" IDENTIFIED BY VALUES ':1'
   USING 'BB01EXT';
--------------------------------------------------------
--  DDL for DB Link DBXUDR
--------------------------------------------------------

  CREATE DATABASE LINK "DBXUDR"
   CONNECT TO "SYSADM" IDENTIFIED BY VALUES ':1'
   USING 'BB01FEED';
--------------------------------------------------------
--  DDL for Type COSRVOBX_T
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SYSADM"."COSRVOBX_T" AS OBJECT (
    CO_ID                       NUMBER,   --  Null:1 No    default       Internal Key
    TMCODE                      NUMBER,   --  Null:2 No    default       rateplan of the service
    SPCODE                      NUMBER,   --  Null:3 No    default       service package of the service
    SNCODE                      NUMBER,   --  Null:4 No    default       service
    CS_SEQNO                    NUMBER,   --  Null:5 No    default (0)   version number
    CS_CHANNEL_NUM              NUMBER,   --  Null:6 Yes   default       associated channel (subaddress)
    CS_STAT_CHNG          VARCHAR2(240),   --  Null:7 Yes   default       Status history. syntax: YYMMDDs|YYMMDDs
    CS_ON_CBB              VARCHAR2(1),   --  Null:8 Yes   default       C=charged on contract based bill
    CS_DATE_BILLED                DATE,   --  Null:9 Yes   default       date of last bill cycle run
    CS_REQUEST                  NUMBER,   --  Null:10 Yes   default       handle to requested GMD-action. logical fkey to MDSRRTAB.REQUEST
    SN_CLASS                    NUMBER,   --  Null:11 Yes   default       servicecode of the service, which is the representative for the equivalence class
    CS_OVW_SUBSCR          VARCHAR2(1),   --  Null:12 Yes   default       Overwrite flag for subscription, A = CS_SUBSCRIPT is an amount, R = CS_SUBSCRIPT is a percentage.
    CS_SUBSCRIPT                 FLOAT,   --  Null:13 Yes   default       Overwrite amount for subscription
    CS_OVW_ACCESS          VARCHAR2(1),   --  Null:14 Yes   default       Overwrite flag for access, A = CS_SUBSCRIPT is an amount, R = CS_SUBSCRIPT is a percentage.
    CS_OVW_ACC_PRD              NUMBER,   --  Null:15 Yes   default       Number of times access fee should be overwritten, -1 indefinitly.
    CS_OVW_ACC_FIRST       VARCHAR2(1),   --  Null:16 Yes   default       X = indicates that overwriting of this access charge has never been processed by BCH
    CS_ACCESS                    FLOAT,   --  Null:17 Yes   default       Overwrite amount for access fee.
    CS_PENDING_STATE       VARCHAR2(8),   --  Null:18 Yes   default       Requested (pending) status syntax:YYMMDDs.
    CS_CHANNEL_EXCL        VARCHAR2(1),   --  Null:19 Yes   default       Indicates if the used channel is exclusive used or not. allowed values: "X" = exclusive,"" = non exclusive.
    CS_DIS_SUBSCR                FLOAT,   --  Null:20 Yes   default       Amount discounted on the subscription fee (depending on the number of contracts).
    CS_ADV_CHARGE                FLOAT,   --  Null:21 Yes   default       Amount of advance access charge on the last bill. NULL, if no advanve access charge was ever billed. This value has to be set during every bill cycle run and when a contract based bill is generated by Customer Administration.
    CS_SRV_TYPE            VARCHAR2(1),   --  Null:22 Yes   default       Service type (flag for BCH to avoid large joins): V=service is VAS (used for selling goods), NULL=all other services.
    SUBPAYER                    NUMBER,   --  Null:23 Yes   default       Payment responsible customer for subscription fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
    USGPAYER                    NUMBER,   --  Null:24 Yes   default       Payment responsible customer for usage fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
    ACCPAYER                    NUMBER,   --  Null:25 Yes   default       Payment responsible customer for access fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
    CS_ENTDATE                    DATE,   --  Null:26 Yes   default       Date of the subscription of this service.
    CS_OVW_LAST            VARCHAR2(1),   --  Null:27 Yes   default       Overwriteflag for CS_ADV_CHARGE: A=absolute overwriting, R=relative overwriting, NULL= no overwriting.
    INSTALL_DATE                  DATE,   --  Null:28 Yes   default       date/time of installation of the service.
    TRIAL_END_DATE                DATE,   --  Null:29 Yes   default       The last day the contract will be "on trial"
    CS_ADV_CHARGE_END_DATE          DATE,   --  Null:30 Yes   default       End Date of Period for Access Charge in Advance. This value has to be set during every bill cycle run and when a contract based bill is generated by Customer Administration.
    PRM_VALUE_ID                NUMBER,   --  Null:31 Yes   default       Service parameter value identifier. Points to a set of parameter values. FK: PARAMETER_VALUE_BASE. PRM_VALUE_ID
    CURRENCY                    NUMBER,   --  Null:32 No    default       Currency. FK: FORCURR
    CS_ADV_CHARGE_CURRENCY        NUMBER,   --  Null:33 Yes   default       Currency of the Advanced Access Charge. Currency of the amount stored in CS_ADV_CHARGE.
    REC_VERSION                 NUMBER,   --  Null:34 No    default (0)   Counter for multiuser access
    SRV_SUBTYPE            VARCHAR2(1),   --  Null:35 Yes   default       Defines the Service-Subtype, which is needed in Free Units. Possible values are NULL for all other Services, "C" for COFU (contract individual Free Units), and "P" for POFU (pooled Free Units at subscriber level) and "L" for POFUL (pooled Free Units at payment responsible level).
    CS_TAKEOVER            VARCHAR2(1),    --  Null:36 Yes   default       The field specifies whether a status change for a service was made as a result of a contract takeover and distinguishes between old ('O') and new contracts ('N').
    
    obx_Incidence_id        varchar2(20),
    obx_partition           varchar2(30),
    obx_status            varchar2(12),        
    obx_seq                 number,
    obx_ts                  date,
    
    CONSTRUCTOR FUNCTION CoSrvObx_t ( Incidence_id in varchar2, part in varchar2)
    RETURN self AS RESULT,
    
    MEMBER PROCEDURE setIncidence ( SELF IN OUT NOCOPY CoSrvObx_t, Incidence_id in varchar2 ),
    MEMBER PROCEDURE setPartition ( SELF IN OUT NOCOPY CoSrvObx_t, part in varchar2 ),
    
    MEMBER PROCEDURE setStatus ( SELF IN OUT NOCOPY CoSrvObx_t, status in varchar2 ),
    MEMBER PROCEDURE setSeq ( SELF IN OUT NOCOPY CoSrvObx_t, seq in number ),
    
    MEMBER PROCEDURE insTab ( SELF IN OUT NOCOPY CoSrvObx_t),
    
    MEMBER PROCEDURE inObj ( SELF IN OUT NOCOPY CoSrvObx_t, 
                                CO_ID_                    in  NUMBER,
                                TMCODE_                   in  NUMBER,   --  Null:37 No    default       rateplan of the service
                                SPCODE_                   in  NUMBER,   --  Null:38 No    default       service package of the service
                                SNCODE_                   in  NUMBER,   --  Null:39 No    default       service
                                CS_SEQNO_                 in  NUMBER,   --  Null:40 No    default (0)   version number
                                CS_CHANNEL_NUM_           in  NUMBER,   --  Null:41 Yes   default       associated channel (subaddress)
                                CS_STAT_CHNG_             in  VARCHAR2,   --  Null:42 Yes   default       Status history. syntax: YYMMDDs|YYMMDDs
                                CS_ON_CBB_                in  VARCHAR2,   --  Null:43 Yes   default       C=charged on contract based bill
                                CS_DATE_BILLED_           in  DATE,   --  Null:44 Yes   default       date of last bill cycle run
                                CS_REQUEST_               in  NUMBER,   --  Null:45 Yes   default       handle to requested GMD-action. logical fkey to MDSRRTAB.REQUEST
                                SN_CLASS_                 in  NUMBER,   --  Null:46 Yes   default       servicecode of the service, which is the representative for the equivalence class
                                CS_OVW_SUBSCR_            in  VARCHAR2,   --  Null:47 Yes   default       Overwrite flag for subscription, A = CS_SUBSCRIPT is an amount, R = CS_SUBSCRIPT is a percentage.
                                CS_SUBSCRIPT_             in  FLOAT,   --  Null:48 Yes   default       Overwrite amount for subscription
                                CS_OVW_ACCESS_            in  VARCHAR2,   --  Null:49 Yes   default       Overwrite flag for access, A = CS_SUBSCRIPT is an amount, R = CS_SUBSCRIPT is a percentage.
                                CS_OVW_ACC_PRD_           in  NUMBER,   --  Null:50 Yes   default       Number of times access fee should be overwritten, -1 indefinitly.
                                CS_OVW_ACC_FIRST_         in  VARCHAR2,   --  Null:51 Yes   default       X = indicates that overwriting of this access charge has never been processed by BCH
                                CS_ACCESS_                in  FLOAT,   --  Null:52 Yes   default       Overwrite amount for access fee.
                                CS_PENDING_STATE_         in  VARCHAR2,   --  Null:53 Yes   default       Requested (pending) status syntax:YYMMDDs.
                                CS_CHANNEL_EXCL_          in  VARCHAR2,   --  Null:54 Yes   default       Indicates if the used channel is exclusive used or not. allowed values: "X" = exclusive,"" = non exclusive.
                                CS_DIS_SUBSCR_            in  FLOAT,   --  Null:55 Yes   default       Amount discounted on the subscription fee (depending on the number of contracts).
                                CS_ADV_CHARGE_            in  FLOAT,   --  Null:56 Yes   default       Amount of advance access charge on the last bill. NULL, if no advanve access charge was ever billed. This value has to be set during every bill cycle run and when a contract based bill is generated by Customer Administration.
                                CS_SRV_TYPE_              in  VARCHAR2,   --  Null:57 Yes   default       Service type (flag for BCH to avoid large joins): V=service is VAS (used for selling goods), NULL=all other services.
                                SUBPAYER_                 in  NUMBER,   --  Null:58 Yes   default       Payment responsible customer for subscription fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
                                USGPAYER_                 in  NUMBER,   --  Null:59 Yes   default       Payment responsible customer for usage fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
                                ACCPAYER_                 in  NUMBER,   --  Null:60 Yes   default       Payment responsible customer for access fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
                                CS_ENTDATE_               in  DATE,   --  Null:61 Yes   default       Date of the subscription of this service.
                                CS_OVW_LAST_              in  VARCHAR2,   --  Null:62 Yes   default       Overwriteflag for CS_ADV_CHARGE: A=absolute overwriting, R=relative overwriting, NULL= no overwriting.
                                INSTALL_DATE_             in  DATE,   --  Null:63 Yes   default       date/time of installation of the service.
                                TRIAL_END_DATE_           in  DATE,   --  Null:64 Yes   default       The last day the contract will be "on trial"
                                CS_ADV_CHARGE_END_DATE_   in  DATE,   --  Null:65 Yes   default       End Date of Period for Access Charge in Advance. This value has to be set during every bill cycle run and when a contract based bill is generated by Customer Administration.
                                PRM_VALUE_ID_             in  NUMBER,   --  Null:66 Yes   default       Service parameter value identifier. Points to a set of parameter values. FK: PARAMETER_VALUE_BASE. PRM_VALUE_ID
                                CURRENCY_                 in  NUMBER,   --  Null:67 No    default       Currency. FK: FORCURR
                                CS_ADV_CHARGE_CURRENCY_   in  NUMBER,   --  Null:68 Yes   default       Currency of the Advanced Access Charge. Currency of the amount stored in CS_ADV_CHARGE.
                                REC_VERSION_              in  NUMBER,   --  Null:69 No    default (0)   Counter for multiuser access
                                SRV_SUBTYPE_              in  VARCHAR2,   --  Null:70 Yes   default       Defines the Service-Subtype, which is needed in Free Units. Possible values are NULL for all other Services, "C" for COFU (contract individual Free Units), and "P" for POFU (pooled Free Units at subscriber level) and "L" for POFUL (pooled Free Units at payment responsible level).
                                CS_TAKEOVER_              in  VARCHAR2
                        )
)
/
CREATE OR REPLACE EDITIONABLE TYPE BODY "SYSADM"."COSRVOBX_T" AS

    CONSTRUCTOR FUNCTION CoSrvObx_t ( Incidence_id in varchar2, part in varchar2)
    RETURN self AS RESULT is
    begin
        CO_ID                   := null;
        TMCODE                  := null;
        SPCODE                  := null;
        SNCODE                  := null;
        CS_SEQNO                := null;
        CS_CHANNEL_NUM          := null;
        CS_STAT_CHNG            := null;
        CS_ON_CBB               := null;
        CS_DATE_BILLED          := null;
        CS_REQUEST              := null;
        SN_CLASS                := null;
        CS_OVW_SUBSCR           := null;
        CS_SUBSCRIPT            := null;
        CS_OVW_ACCESS           := null;
        CS_OVW_ACC_PRD          := null;
        CS_OVW_ACC_FIRST        := null;
        CS_ACCESS               := null;
        CS_PENDING_STATE        := null;
        CS_CHANNEL_EXCL         := null;
        CS_DIS_SUBSCR           := null;
        CS_ADV_CHARGE           := null;
        CS_SRV_TYPE             := null;
        SUBPAYER                := null;
        USGPAYER                := null;
        ACCPAYER                := null;
        CS_ENTDATE              := null;
        CS_OVW_LAST             := null;
        INSTALL_DATE            := null;
        TRIAL_END_DATE          := null;
        CS_ADV_CHARGE_END_DATE  := null;
        PRM_VALUE_ID            := null;
        CURRENCY                := null;
        CS_ADV_CHARGE_CURRENCY  := null;
        REC_VERSION             := null;
        SRV_SUBTYPE             := null;
        CS_TAKEOVER             := null;

        obx_Incidence_id         := null;
        obx_partition            := null;
        obx_status               := null;
        obx_seq                  := null;
        obx_ts                   := null;

        setIncidence(Incidence_id);
        setPartition(part);

        RETURN;
    end;

    MEMBER PROCEDURE setIncidence ( SELF IN OUT NOCOPY CoSrvObx_t, Incidence_id in varchar2 ) is
    begin
        obx_Incidence_id := Incidence_id;
    end;
    MEMBER PROCEDURE setPartition ( SELF IN OUT NOCOPY CoSrvObx_t, part in varchar2 ) is
    begin
        obx_partition := part;
    end;
    MEMBER PROCEDURE setStatus ( SELF IN OUT NOCOPY CoSrvObx_t, status in varchar2 ) is
    begin
        obx_status := status;
    end;
    MEMBER PROCEDURE setSeq ( SELF IN OUT NOCOPY CoSrvObx_t, seq in number ) is
    begin
        obx_seq := seq;
    end;

    MEMBER PROCEDURE insTab ( SELF IN OUT NOCOPY CoSrvObx_t) is
		pragma autonomous_transaction;
    begin
        obx_ts := SYSDATE;
        insert into CoSrvObx i values(self);
	commit;
    end;

    MEMBER PROCEDURE inObj ( SELF IN OUT NOCOPY CoSrvObx_t,
                                CO_ID_                    in  NUMBER,
                                TMCODE_                   in  NUMBER,   -- Null:1 No    default       rateplan of the service
                                SPCODE_                   in  NUMBER,   -- Null:2 No    default       service package of the service
                                SNCODE_                   in  NUMBER,   -- Null:3 No    default       service
                                CS_SEQNO_                 in  NUMBER,   -- Null:4 No    default (0)   version number

                                CS_CHANNEL_NUM_           in  NUMBER,   -- Null:5 Yes   default       associated channel (subaddress)
                                CS_STAT_CHNG_             in  VARCHAR2,   --  Null:6 Yes   default       Status history. syntax: YYMMDDs|YYMMDDs
                                CS_ON_CBB_                in  VARCHAR2,   --  Null:7 Yes   default       C=charged on contract based bill
                                CS_DATE_BILLED_           in  DATE,   --  Null:8 Yes   default       date of last bill cycle run
                                CS_REQUEST_               in  NUMBER,   -- Null:9 Yes   default       handle to requested GMD-action. logical fkey to MDSRRTAB.REQUEST
                                SN_CLASS_                 in  NUMBER,   -- Null:10 Yes   default       servicecode of the service, which is the representative for the equivalence class
                                CS_OVW_SUBSCR_            in  VARCHAR2,   --  Null:11 Yes   default       Overwrite flag for subscription, A = CS_SUBSCRIPT is an amount, R = CS_SUBSCRIPT is a percentage.
                                CS_SUBSCRIPT_             in  FLOAT,   --  Null:12 Yes   default       Overwrite amount for subscription
                                CS_OVW_ACCESS_            in  VARCHAR2,   --  Null:13 Yes   default       Overwrite flag for access, A = CS_SUBSCRIPT is an amount, R = CS_SUBSCRIPT is a percentage.
                                CS_OVW_ACC_PRD_           in  NUMBER,   -- Null:14 Yes   default       Number of times access fee should be overwritten, -1 indefinitly.
                                CS_OVW_ACC_FIRST_         in  VARCHAR2,   --  Null:15 Yes   default       X = indicates that overwriting of this access charge has never been processed by BCH
                                CS_ACCESS_                in  FLOAT,   --  Null:16 Yes   default       Overwrite amount for access fee.
                                CS_PENDING_STATE_         in  VARCHAR2,   --  Null:17 Yes   default       Requested (pending) status syntax:YYMMDDs.
                                CS_CHANNEL_EXCL_          in  VARCHAR2,   --  Null:18 Yes   default       Indicates if the used channel is exclusive used or not. allowed values: "X" = exclusive,"" = non exclusive.
                                CS_DIS_SUBSCR_            in  FLOAT,   --  Null:19 Yes   default       Amount discounted on the subscription fee (depending on the number of contracts).
                                CS_ADV_CHARGE_            in  FLOAT,   --  Null:20 Yes   default       Amount of advance access charge on the last bill. NULL, if no advanve access charge was ever billed. This value has to be set during every bill cycle run and when a contract based bill is generated by Customer Administration.
                                CS_SRV_TYPE_              in  VARCHAR2,   --  Null:21 Yes   default       Service type (flag for BCH to avoid large joins): V=service is VAS (used for selling goods), NULL=all other services.
                                SUBPAYER_                 in  NUMBER,   -- Null:22 Yes   default       Payment responsible customer for subscription fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
                                USGPAYER_                 in  NUMBER,   -- Null:23 Yes   default       Payment responsible customer for usage fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.
                                ACCPAYER_                 in  NUMBER,   -- Null:24 Yes   default       Payment responsible customer for access fee of this service belonging to the same customer structure. FK: CUSTOMER_ALL.CUSTOMER_ID.

                                CS_ENTDATE_               in  DATE,   --  Null:25 Yes   default       Date of the subscription of this service.
                                CS_OVW_LAST_              in  VARCHAR2,   --  Null:26 Yes   default       Overwriteflag for CS_ADV_CHARGE: A=absolute overwriting, R=relative overwriting, NULL= no overwriting.
                                INSTALL_DATE_             in  DATE,   --  Null:27 Yes   default       date/time of installation of the service.
                                TRIAL_END_DATE_           in  DATE,   --  Null:28 Yes   default       The last day the contract will be "on trial"
                                CS_ADV_CHARGE_END_DATE_   in  DATE,   --  Null:29 Yes   default       End Date of Period for Access Charge in Advance.  This value has to be set during every bill cycle run and when a contract based bill is generated by Customer Administration.
                                PRM_VALUE_ID_             in  NUMBER,   -- Null:30 Yes   default       Service parameter value identifier. Points to a set of parameter values. FK: PARAMETER_VALUE_BASE. PRM_VALUE_ID
                                CURRENCY_                 in  NUMBER,   -- Null:31 No    default       Currency. FK: FORCURR
                                CS_ADV_CHARGE_CURRENCY_   in  NUMBER,   -- Null:32 Yes   default       Currency of the Advanced Access Charge. Currency of the amount stored in CS_ADV_CHARGE.
                                REC_VERSION_              in  NUMBER,   -- Null:33 No    default (0)   Counter for multiuser access
                                SRV_SUBTYPE_              in  VARCHAR2,   --  Null:34 Yes   default       Defines the Service-Subtype, which is needed in Free Units. Possible values are NULL for all other Services, "C" for COFU (contract individual Free Units), and "P" for POFU (pooled Free Units at subscriber level) and "L" for POFUL (pooled Free Units at payment responsi ble level).
                                CS_TAKEOVER_              in  VARCHAR2
                        ) is
    begin
        CO_ID                      := CO_ID_;
        TMCODE                     := TMCODE_;
        SPCODE                     := SPCODE_;
        SNCODE                     := SNCODE_;
        CS_SEQNO                   := CS_SEQNO_;

        CS_CHANNEL_NUM             := CS_CHANNEL_NUM_;
        CS_STAT_CHNG               := CS_STAT_CHNG_;
        CS_ON_CBB                  := CS_ON_CBB_;
        CS_DATE_BILLED             := CS_DATE_BILLED_;
        CS_REQUEST                 := CS_REQUEST_;

        SN_CLASS                   := SN_CLASS_;
        CS_OVW_SUBSCR              := CS_OVW_SUBSCR_;
        CS_SUBSCRIPT               := CS_SUBSCRIPT_;
        CS_OVW_ACCESS              := CS_OVW_ACCESS_;
        CS_OVW_ACC_PRD             := CS_OVW_ACC_PRD_;

        CS_OVW_ACC_FIRST           := CS_OVW_ACC_FIRST_;
        CS_ACCESS                  := CS_ACCESS_;
        CS_PENDING_STATE           := CS_PENDING_STATE_;
        CS_CHANNEL_EXCL            := CS_CHANNEL_EXCL_;
        CS_DIS_SUBSCR              := CS_DIS_SUBSCR_;

        CS_ADV_CHARGE              := CS_ADV_CHARGE_;
        CS_SRV_TYPE                := CS_SRV_TYPE_;
        SUBPAYER                   := SUBPAYER_;
        USGPAYER                   := USGPAYER_;
        ACCPAYER                   := ACCPAYER_;

        CS_ENTDATE                 := CS_ENTDATE_;
        CS_OVW_LAST                := CS_OVW_LAST_;
        INSTALL_DATE               := INSTALL_DATE_;
        TRIAL_END_DATE             := TRIAL_END_DATE_;
        CS_ADV_CHARGE_END_DATE     := CS_ADV_CHARGE_END_DATE_;

        PRM_VALUE_ID               := PRM_VALUE_ID_;
        CURRENCY                   := CURRENCY_;
        CS_ADV_CHARGE_CURRENCY     := CS_ADV_CHARGE_CURRENCY_;
        REC_VERSION                := REC_VERSION_;
        SRV_SUBTYPE                := SRV_SUBTYPE_;

        CS_TAKEOVER                := CS_TAKEOVER_;

    end;

end;

/
--------------------------------------------------------
--  DDL for Type IOOBX
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SYSADM"."IOOBX" AS OBJECT (
  path              varchar2(300),
  f_name            varchar2(300),
  f_id              number,
  f_datatype        number,

  CONSTRUCTOR FUNCTION ioObx ( my_path in varchar2, my_file in varchar2)
    RETURN self AS RESULT,

  MEMBER PROCEDURE fopen ( SELF IN OUT NOCOPY ioObx, mode_ in char ),
  MEMBER PROCEDURE fread ( SELF IN OUT NOCOPY ioObx, str out varchar2),
  MEMBER PROCEDURE puts ( SELF IN OUT NOCOPY ioObx, str in varchar2),
  MEMBER PROCEDURE puts_tm ( SELF IN OUT NOCOPY ioObx, str in varchar2),
  MEMBER PROCEDURE fclose ( SELF IN OUT NOCOPY ioObx),
  MEMBER PROCEDURE Log_INFO ( SELF IN OUT NOCOPY ioObx)
  )
/
CREATE OR REPLACE EDITIONABLE TYPE BODY "SYSADM"."IOOBX" AS
  CONSTRUCTOR FUNCTION ioObx ( my_path in varchar2, my_file in varchar2)
    RETURN self AS RESULT is
  begin
    path    := my_path;
    f_name  := my_file;
    Return;
  end;
  -- opens file
  MEMBER PROCEDURE fopen ( SELF IN OUT NOCOPY ioObx, mode_ in char ) is
    f_handler     utl_file.file_type;
  begin
    f_handler   := utl_file.fopen(path, f_name, mode_);
    f_id        := f_handler.id;
    f_datatype  := f_handler.datatype;
  end;
  -- read to open file
  MEMBER PROCEDURE fread ( SELF IN OUT NOCOPY ioObx, str out varchar2) is
    f_handler   utl_file.file_type;
    --str_ varchar2(300);
  begin
    f_handler.id        := f_id;
    f_handler.datatype  := f_datatype;
    utl_file.get_line(f_handler,str);
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      str := NULL;
  end;
   -- writes to open file
  MEMBER PROCEDURE puts ( SELF IN OUT NOCOPY ioObx, str in varchar2) is
    f_handler   utl_file.file_type;
    str_ varchar2(300);
  begin
    f_handler.id        := f_id;
    f_handler.datatype  := f_datatype;
    utl_file.put_line(f_handler,str);
  end;
  -- writes to open file with timestamp
  MEMBER PROCEDURE puts_tm ( SELF IN OUT NOCOPY ioObx, str in varchar2) is
    f_handler   utl_file.file_type;
    str_ varchar2(300);
  begin
    f_handler.id        := f_id;
    f_handler.datatype  := f_datatype;
    str_ := to_char(SYSDATE,'yyyymmdd_hh24:mi:ss')||'   '||str;
    utl_file.put_line(f_handler,str_);
  end;
  -- closes file
  MEMBER PROCEDURE fclose ( SELF IN OUT NOCOPY ioObx) is
    f_handler     utl_file.file_type;
  begin
    f_handler.id := f_id;
    f_handler.datatype := f_datatype;
    utl_file.fclose(f_handler);
  end;
  -- writes db-log info to file
  MEMBER PROCEDURE Log_INFO ( SELF IN OUT NOCOPY ioObx) is
    f_handler     utl_file.file_type;
    log_          varchar2(500);
    cursor c_log is
      SELECT  p.spid        OS_PID,
              s.SID         sid,
              s.serial#     serial#,
              p.username    osuser,
              s.username    oracleuser,
              s.logon_time  logon_time,
              s.program     program,
              s.machine     machine
       FROM v$process p, v$session s
        WHERE s.paddr = p.addr
          AND s.username IS NOT NULL
          AND audsid = (SELECT USERENV ('sessionid') FROM DUAL);
    row_log         c_log%rowtype;
    glob_name       VARCHAR2(22);
    num_tag         VARCHAR2(12);
  begin
    f_handler.id := f_id;
    f_handler.datatype := f_datatype;
    open c_log;
    fetch c_log into row_log;
    close c_log;
    SELECT GLOBAL_NAME,SUBSTR(REPLACE(GLOBAL_NAME,'.WORLD'),-3) into glob_name,num_tag
         FROM GLOBAL_NAME;
    log_ := '-- Infomation on DatabaseEnv  --  '||to_char(SYSDATE,'yyyymmdd_hh24:mi:ss')||'  ------------------------------------';
    utl_file.put_line(f_handler,log_);
    utl_file.put_line(f_handler,'--');
    utl_file.put_line(f_handler,'--    OS_PID     : '||row_log.OS_PID);
    utl_file.put_line(f_handler,'--    SID        : '||row_log.sid);
    utl_file.put_line(f_handler,'--    Serial#    : '||row_log.serial#);
    utl_file.put_line(f_handler,'--    OSuser     : '||row_log.osuser);
    utl_file.put_line(f_handler,'--    OracleUser : '||row_log.oracleuser);
    utl_file.put_line(f_handler,'--    Logon Time : '||row_log.logon_time);
    utl_file.put_line(f_handler,'--    Program    : '||row_log.program);
    utl_file.put_line(f_handler,'--    Machine    : '||row_log.machine);
    utl_file.put_line(f_handler,'--');
    utl_file.put_line(f_handler,'--    GLOBAL_NAME :'||glob_name);
    utl_file.put_line(f_handler,'--    No          :'||num_tag);
    utl_file.put_line(f_handler,'--');
    utl_file.put_line(f_handler,'------------------------------------------------------------------------------------------');
  end;
end;

/
--------------------------------------------------------
--  DDL for Type SCRIPT_HISTORY_OBJ
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SYSADM"."SCRIPT_HISTORY_OBJ" AS OBJECT (
   entry_date    DATE,            --  Null? No    default       Date of Entry
   script_name   VARCHAR2 (255),                      --  Null? Yes   default
   customer_id   NUMBER,                              --  Null? Yes   default
   co_id         NUMBER,            --  Null? No    default       Contract ID
   action        VARCHAR2 (255),
                             --  Null? No    default       Action carried out
   remarks       VARCHAR2 (255),                      --  Null? Yes   default
   MEMBER PROCEDURE ins (SELF IN OUT NOCOPY script_history_obj),
   MEMBER PROCEDURE setcucoid (
      SELF   IN OUT NOCOPY   script_history_obj,
      cuid   IN              NUMBER,
      coid   IN              NUMBER
   ),
   MEMBER PROCEDURE setaction (
      SELF   IN OUT NOCOPY   script_history_obj,
      str    IN              VARCHAR2
   ),
   MEMBER PROCEDURE setremark (
      SELF   IN OUT NOCOPY   script_history_obj,
      str    IN              VARCHAR2
   )
);
/
CREATE OR REPLACE EDITIONABLE TYPE BODY "SYSADM"."SCRIPT_HISTORY_OBJ" 
AS
   -- insert data
   MEMBER PROCEDURE ins (SELF IN OUT NOCOPY script_history_obj)
   IS
   BEGIN
      INSERT INTO ben.script_history
                  (entry_date, script_name, customer_id, co_id, action,
                   remarks
                  )
           VALUES (entry_date, script_name, customer_id, co_id, action,
                   remarks
                  );
   END;
   -- set setCuCoID
   MEMBER PROCEDURE setcucoid (
      SELF   IN OUT NOCOPY   script_history_obj,
      cuid   IN              NUMBER,
      coid   IN              NUMBER
   )
   IS
   BEGIN
      customer_id := cuid;
      co_id := coid;
   END;
   -- set setAction
   MEMBER PROCEDURE setaction (
      SELF   IN OUT NOCOPY   script_history_obj,
      str    IN              VARCHAR2
   )
   IS
   BEGIN
      action := SUBSTR (str, 0, 255);
   END;
   -- set setRemark
   MEMBER PROCEDURE setremark (
      SELF   IN OUT NOCOPY   script_history_obj,
      str    IN              VARCHAR2
   )
   IS
   BEGIN
      remarks := SUBSTR (str, 0, 255);
   END;
END;

/
--------------------------------------------------------
--  DDL for Type TANNUMBERARRAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SYSADM"."TANNUMBERARRAY" IS TABLE OF INTEGER;

/
--------------------------------------------------------
--  DDL for Type TARGYS_TANNUMBERARRAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SYSADM"."TARGYS_TANNUMBERARRAY" AS TABLE OF NUMBER;

/
--------------------------------------------------------
--  DDL for Type TARGYS_TASSTRINGARRAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SYSADM"."TARGYS_TASSTRINGARRAY" AS TABLE OF VARCHAR2(100);

/
--------------------------------------------------------
--  DDL for Type TASSTRINGKEYARRAY
--------------------------------------------------------

  CREATE OR REPLACE EDITIONABLE TYPE "SYSADM"."TASSTRINGKEYARRAY" IS TABLE OF VARCHAR2 (100);

/
--------------------------------------------------------
--  DDL for Sequence BID_GROUP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."BID_GROUP_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence BLACKLISTED_DEVICE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."BLACKLISTED_DEVICE_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence CC_PACKAGE_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."CC_PACKAGE_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 102 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence CDR_REJECT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."CDR_REJECT_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence CIBER_BATCH_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."CIBER_BATCH_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence CIBER_BILL_DTL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."CIBER_BILL_DTL_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence DXL_SUFFIX_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."DXL_SUFFIX_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence GMD_JOB_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."GMD_JOB_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence ILF_SEQ_NO
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."ILF_SEQ_NO"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence JURISDICTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."JURISDICTION_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 NOCACHE  NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_ACCOUNT_KEY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_ACCOUNT_KEY_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 123101721 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_ACC_CHRG_OVW_ASR
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_ACC_CHRG_OVW_ASR"  MINVALUE 1 MAXVALUE 54488279 INCREMENT BY 1 START WITH 54488280 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_ACC_CHRG_OVW_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_ACC_CHRG_OVW_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 55661340 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_APP_INSTANCE_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_APP_INSTANCE_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 96 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_BAA_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_BAA_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 2 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_BCH_INSTANCE_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_BCH_INSTANCE_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 96247 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_BILLRUN_SEQNO_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_BILLRUN_SEQNO_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 38464 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_BLUIFTAB_ID
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_BLUIFTAB_ID"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 30498675 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_CDH_INSTANCE_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_CDH_INSTANCE_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_CDR_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_CDR_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 100 START WITH 112254253452 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_CDS_REQUEST_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_CDS_REQUEST_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 266 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_CONTRACT_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_CONTRACT_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 31859425 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_CRP_REQUEST_ID_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_CRP_REQUEST_ID_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_FEES_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_FEES_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21270963 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence MAX_FLCODE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "SYSADM"."MAX_FLCODE_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 4111208 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
